import re
import torch
import numpy as np
from transformers import AutoTokenizer, AutoModel,BertForMaskedLM
from fitbert import FitBert

class Span():
    def __init__(self,start,end):
        self.start = start
        self.end = end

    def __str__(self):
        return "Span({},{})".format(self.start,self.end)

    def __iter__(self):
        yield self.start
        yield self.end

class ReplacementConcept():
    def __init__(self,concept,frequency,alternatives):
        self.alternatives = alternatives
        self.concept = concept
        self.frequency = frequency

class ConceptsUtils():

    @staticmethod
    def get_concept_names(concepts):
        return [concept.concept for concept in concepts]

    @staticmethod
    def get_concept_dict(concepts):
        conc_dict = {}
        for concept in concepts:
            conc_dict[concept.concept] = concept
        return conc_dict


    @staticmethod
    def create_freq_dict(concepts):
        freq_dict = {}
        for concept in concepts:
            freq_dict[concept.concept] = concept.frequency
        return freq_dict

    @staticmethod
    def discard_by_frequency(concepts,threshold=2):
        concepts = [concept for concept in concepts if concept.frequency>=threshold]
        concepts.sort(key=lambda concept: len(concept.concept))
        return concepts
    

class BertRanker():  
    def __init__(self,bert_args,sentence_separator=r"(\. [a-zA-Z])",context_window=1):
        self.sentence_separator = sentence_separator
        self.context_window = context_window
        
        self.model = FitBert(**bert_args)


    def rank_concept(self,sentence,context, span, alternatives):
        
        masked_sentence, masked = self.model.mask(sentence, tuple(span))
        contexted_text = ". ".join(context.get("pre-context"))+masked_sentence+". ".join(context.get("fol-context"))
        print("\nRANKING: ",masked)
        print("\nMASKED SENTENCE: ",masked_sentence)

        ranks, probs = self.model.rank(masked_sentence, alternatives, with_prob=True)

        sorted_idexes = np.argsort(ranks)


        print("ranks:",ranks)


        ret = [conc_prob for conc_prob in sorted(list(zip(ranks,probs)),key=lambda x: x[1],reverse=True)]
        print("\nRANKED OPTIONS:",ret)

        return ret

    def get_context(self,sentences,sentence_idx,window_size=1):

        num_sentences = len(sentences)

        prev_sentence_idx = sentence_idx-window_size if sentence_idx-window_size >= window_size else None  
        next_sentence_idx = sentence_idx+window_size if sentence_idx+window_size < num_sentences-1 else None

        return {"pre-context": sentences[prev_sentence_idx:sentence_idx],"fol-context": sentences[sentence_idx+1:next_sentence_idx]}

    def __split_sentences(self,whole_text):
        sentences = re.split(self.sentence_separator,whole_text)
        if(len(sentences)>1):
            for idx in range(2,len(sentences),2):
                first_char = sentences[idx-1][-1]
                sentences[idx] = first_char+sentences[idx]
                sentences[idx-2] += sentences[idx-1][0]
            sentences = sentences[::2]
        else: sentences = [whole_text]

        return sentences

    def genSubstitutions(self,text,concepts,concept_discard_func=(ConceptsUtils.discard_by_frequency,{"threshold":0})):
        
        sentences = self.__split_sentences(text)

        concepts = concept_discard_func[0](concepts,**concept_discard_func[1])

        concepts_regex = "|".join(ConceptsUtils.get_concept_names(concepts))

        concepts_freq_dict = ConceptsUtils.create_freq_dict(concepts)
        concepts_objects = ConceptsUtils.get_concept_dict(concepts)

        new_sentences = sentences

        inc_len = 0
        
        ret = {}

        for sent_idx,sentence in enumerate(sentences):

            sentence_span = Span(inc_len,inc_len+len(sentence))
            
            matches = list(re.finditer(concepts_regex,sentence))

            if not matches:
                inc_len+=len(sentence)+2
                continue
            
            sentence_context = self.get_context(sentences,sent_idx,window_size=1)

            for match in matches:

                concept = concepts_objects[match.group(0)]

                ranked_list = self.rank_concept(sentence,
                                                    sentence_context,
                                                    Span(sentence_span.start+match.start(),sentence_span.start+match.end()),
                                                    concept.alternatives)

                ret[concept.concept] = ranked_list
            
            inc_len+=len(sentence)+2

        return True
    
def main():

    scibert_tokenizer = AutoTokenizer.from_pretrained("allenai/scibert_scivocab_uncased")
    scibert_model = BertForMaskedLM.from_pretrained("allenai/scibert_scivocab_uncased")

    bert_args = {"model": scibert_model,"tokenizer": scibert_tokenizer}

    ranker = BertRanker(bert_args, sentence_separator=r"(([^e.g]\.) [a-zA-Z?-])", context_window=1)

    text = '''Current operating systems have evolved over the last forty years into complex overlapping code bases [70, 4, 51, 57], which were architected for very different environments than exist today. The cloud has become a preferred platform, for both decision support and online serving applications. Serverless computing supports the concept of elastic provision of resources, which is very attractive in many environments. Machine learning (ML) is causing many applications to be redesigned, and future operating systems must intimately support such applications. Hardware is becoming massively parallel and heterogeneous. These “sea changes” make it imperative to rethink the architecture of system software, which is the topic of this paper.
Mainstream operating systems (OSs) date from the 1980s and were designed for the hardware platforms of 40 years ago, consisting of a single processor, limited main memory and a small set of runnable tasks. Today’s cloud platforms contain hundreds of thousands of processors, heterogeneous computing resources (including CPUs, GPUs, FPGAs, TPUs, SmartNICs, and so on) and multiple levels of memory and storage. These platforms support millions of active users that access thousands of services. Hence, the OS must deal with a scale problem of 105 or 106 more resources to manage and schedule. Managing OS state is a much bigger problem than 40 years ago in terms of both throughput and latency, as thousands of services must communicate to respond in near real-time to a user’s click [21, 5].
Forty years ago, there was little thought about parallelism. After all, there was only one processor. Now it is not unusual to run Map-Reduce or Apache Spark jobs with thousands of processes using millions of threads [13]. Stragglers creating long-tails inevitably result from substantial parallelism and are the bane of modern systems: incredibly costly and nearly impossible to debug [21].
Forty years ago programmers typically wrote monolithic programs that ran to completion and exited. Now, programs may be coded in multiple languages, make use of libraries of services (like search, communications, databases, ML, and others), and may run continuously with varying load. As a result, debugging has become much more complex and involves a flow of control in multiple environments. Debugging such a network of tasks is a real challenge, not considered forty years ago.
Forty years ago there was little-to-no-thought about privacy and fraud. Now, GDPR [73] dictates system behavior for Personally Identifiable Information (PII) on systems that are under continuous attack. Future systems should build in support for such constructs. Moreover, there are many cases of bad actors doctoring photos or videos, and there is no chain of provenance to automatically record and facilitate exposure of such activity.
Machine learning (ML) is quickly becoming central to all large software systems. However, ML is typically bolted onto the top of most systems as an after thought. Application and system developers struggle to identify the right data for ML analysis and to manage synchronization, ordering, freshness, privacy, provenance, and performance concerns. Future systems should directly support and enable AI applications and AI introspection, including first-order support for declarative semantics for AI operations on system data.
In our opinion, serverless computing will become the dominant cloud architecture. One does not need to spin up a virtual machine (VM), which will sit idle when there is no work to do. Instead, one should use an execution environment like Amazon Lambda. Lambda is an efficient task manager that encourages one to divide up a user task into a pipeline of severalto-many subtasks1. Resources are allocated to a task when it is running, and no resources are consumed at other times. In this way, there are no dedicated VMs; instead there is a collection of short-running subtasks. As such, users only pay for the resources that they consume and their applications can scale to thousands of functions when needed. We expect that Lambda will become the dominant cloud environment unless the cloud vendors radically modify their pricing algorithms. Lambda will cause many more tasks to exist, creating a more expansive task management problem.
Lastly, “bloat” has wrecked havoc on elderly OSs, and the pathlength of common operations such as sending a message and reading bytes from a file are now uncompetitively expensive. One key reason for the bloat is the uncontrolled layering of abstractions. Having a clean, declarative way of capturing and operating on operating system state can help reduce that layering.
These changed circumstances dictate that system software should be reconsidered. In this proposal, we explore a radically different design for operating systems that we believe will scale to support the performance, management and security challenges of modern computing workloads: a data-centric architecture for operating systems built around clean separation of 1In this paper, we will use Lambda as an exemplar of any resource allocation system that supports “pay only for what you use.” all state into database tables, and leveraging the extensive work in DBMS engine technology to provide scalability, high performance, ease of management and security. We sketch why this design could eliminate many of the difficult software engineering challenges in current OSes and how it could aid important applications such as HPC and Internet service workloads. In the next seven sections, we describe the main tenets of this data-centric architecture. Then, in Section 9, we sketch a proposal concerning how to move forward.'''


    concepts = [
        ReplacementConcept('OSes', 53, ['major operating systems', 'machine operating sound', 'controlling energy storage systems', 'science user facility operated', 'machine operating sounds', 'controlled dynamical system', 'computer vision model operating', 'unknown time evolving system', 'biological natural systems', 'real robotic systems', 'crossed wires represent multiple systems', 'good concept representation learning system', 'standard recommender system metrics', 'human auditory system', 'general type-2 fuzzy systems', 'quantum linear system algorithm', 'efficient machine learning systems design', 'machine learning systems considers', 'actual intelligent maritime monitoring systems', 'submitted online learning systems', 'computational model system', 'trustworthy machine learning systems', 'traditional system', 'model complex systems consisting', 'visual system', 'automatic shape control system', 'expect broadly applicable intelligent systems', 'automated feedback system based', 'chaotic systems', 'economical power system operations', 'heterogeneous multi-agent systems', 'conscious systems', 'popular recommendation systems datasets', 'learn non-linear system evolutions', 'continuous dynamical systems', 'stochastic system', 'simple model systems showed', 'trained system', 'incremental classification systems', 'machine learning systems design', 'conventional federated systems', 'complex system', 'early expert systems', 'existing motion planning systems', 'engineering trustworthy systems', 'multiple classifier systems', 'flexible underlying learning system', 'artificial intelligence systems', 'construct mechanistic systems', 'actual physical systems']),
        ReplacementConcept('OSs', 53, ['major operating systems', 'machine operating sound', 'controlling energy storage systems', 'science user facility operated', 'machine operating sounds', 'controlled dynamical system', 'computer vision model operating', 'unknown time evolving system', 'biological natural systems', 'real robotic systems', 'crossed wires represent multiple systems', 'good concept representation learning system', 'standard recommender system metrics', 'human auditory system', 'general type-2 fuzzy systems', 'quantum linear system algorithm', 'efficient machine learning systems design', 'machine learning systems considers', 'actual intelligent maritime monitoring systems', 'submitted online learning systems', 'computational model system', 'trustworthy machine learning systems', 'traditional system', 'model complex systems consisting', 'visual system', 'automatic shape control system', 'expect broadly applicable intelligent systems', 'automated feedback system based', 'chaotic systems', 'economical power system operations', 'heterogeneous multi-agent systems', 'conscious systems', 'popular recommendation systems datasets', 'learn non-linear system evolutions', 'continuous dynamical systems', 'stochastic system', 'simple model systems showed', 'trained system', 'incremental classification systems', 'machine learning systems design', 'conventional federated systems', 'complex system', 'early expert systems', 'existing motion planning systems', 'engineering trustworthy systems', 'multiple classifier systems', 'flexible underlying learning system', 'artificial intelligence systems', 'construct mechanistic systems', 'actual physical systems']),
        ReplacementConcept('OS', 53, ['major operating systems', 'machine operating sound', 'controlling energy storage systems', 'science user facility operated', 'machine operating sounds', 'controlled dynamical system', 'computer vision model operating', 'unknown time evolving system', 'biological natural systems', 'real robotic systems', 'crossed wires represent multiple systems', 'good concept representation learning system', 'standard recommender system metrics', 'human auditory system', 'general type-2 fuzzy systems', 'quantum linear system algorithm', 'efficient machine learning systems design', 'machine learning systems considers', 'actual intelligent maritime monitoring systems', 'submitted online learning systems', 'computational model system', 'trustworthy machine learning systems', 'traditional system', 'model complex systems consisting', 'visual system', 'automatic shape control system', 'expect broadly applicable intelligent systems', 'automated feedback system based', 'chaotic systems', 'economical power system operations', 'heterogeneous multi-agent systems', 'conscious systems', 'popular recommendation systems datasets', 'learn non-linear system evolutions', 'continuous dynamical systems', 'stochastic system', 'simple model systems showed', 'trained system', 'incremental classification systems', 'machine learning systems design', 'conventional federated systems', 'complex system', 'early expert systems', 'existing motion planning systems', 'engineering trustworthy systems', 'multiple classifier systems', 'flexible underlying learning system', 'artificial intelligence systems', 'construct mechanistic systems', 'actual physical systems']),
        ReplacementConcept('operating systems', 13, ['major operating systems', 'machine operating sound', 'controlling energy storage systems', 'science user facility operated', 'machine operating sounds', 'controlled dynamical system', 'computer vision model operating', 'unknown time evolving system', 'biological natural systems', 'real robotic systems', 'crossed wires represent multiple systems', 'good concept representation learning system', 'standard recommender system metrics', 'human auditory system', 'general type-2 fuzzy systems', 'quantum linear system algorithm', 'efficient machine learning systems design', 'machine learning systems considers', 'actual intelligent maritime monitoring systems', 'submitted online learning systems', 'computational model system', 'trustworthy machine learning systems', 'traditional system', 'model complex systems consisting', 'visual system', 'automatic shape control system', 'expect broadly applicable intelligent systems', 'automated feedback system based', 'chaotic systems', 'economical power system operations', 'heterogeneous multi-agent systems', 'conscious systems', 'popular recommendation systems datasets', 'learn non-linear system evolutions', 'continuous dynamical systems', 'stochastic system', 'simple model systems showed', 'trained system', 'incremental classification systems', 'machine learning systems design', 'conventional federated systems', 'complex system', 'early expert systems', 'existing motion planning systems', 'engineering trustworthy systems', 'multiple classifier systems', 'flexible underlying learning system', 'artificial intelligence systems', 'construct mechanistic systems', 'actual physical systems']),
        ReplacementConcept('main memory', 6, ['main memory plays', 'called main memory', 'main memory stores 8', 'entire main memory', 'large-capacity main memory part', 'main underlying idea', 'main practical issues', 'main issues discussed', 'kth principal component ~u', 'principal components analysis', 'orthogonal principal components', 'main model achieves low loss', 'weakly trained main model', 'multi-scale local principal component analysis', 'principal component analysis', 'top 5 principal components', 'main model process', 'principal components', 'sparse principal component', 'main model', 'main model’s error', 'principal component', 'principal component vectors', 'main quantity examined', 'principal component eigenvectors', 'principal component scores', 'sparse principal component analysis problem', 'main movie types comedy', 'main types errors related', 'principal label space transformation', 'main discussed points', 'main geometric aspect', 'dataset’s main table', 'main performance metric', 'extracting main information', '= 5 main classes', 'main training process', 'main implementation focus', 'discover principal modes', 'principal angle condition', 'learning algorithm’s main objective function', 'main network achieve', 'main data structure', 'main descriptive statistics', 'main difference lies', 'main differences', 'main network', 'main comments arise', 'main mgr task', 'main task dataset']),
        ReplacementConcept('system software', 4, ['system protection software', 'simple software systems', 'software systems', 'software system', 'machine learning software stack', 'product management software developed', 'speech transcription systems classifying phonemes', 'distributed software architectures', 'common software platform', 'submit system description papers', 'document image understanding system', 'specialised software libraries', 'language processing system', 'open source software library', 'natural language processing systems', 'software engineering areas', 'system input', 'software engineers compare', 'system state information', 'existing motion planning systems', 'video analytics system', 'invited 14 software engineers', 'software engineers', 'music recommendation system', 'seamlessly integrate system initiative guidance', 'asked software engineers', 'system initiative guidance', 'open source software package designed', 'software evolution analysis', 'marker-based motion capture system', 'motion capture system', 'music recommender system', 'request routing system', 'neural information processing systems', 'software engineers provided', 'software engineers fare', 'support software agents', 'open source software', 'interactive music systems', 'traditional information technology systems', 'audio processing system capable', 'software engineer solve', 'system log information', 'robust aggregation system', 'prediction profile system', 'networked systems space', 'credit scoring system', 'news recommendation system', 'driver software running', 'database systems']),
        ReplacementConcept('social network', 4, ['social network company', 'popular social networks', 'generic social network scenario', 'popular social network', 'on-line social network', 'social network scenario', 'social network classification', 'social network disaster relevance', 'social network scenarios', 'social network graphs', 'social network graph', 'social networks', 'unequal social groups', 'analyze social data', 'big social data', 'social media data', 'social data', 'social media language', 'encodes societal gender biases', 'great societal relevance', 'social welfare functions', 'social media companies', 'social graph', 'social interaction mode', 'rich social graph', 'social media information', 'reify racialized social inequality', 'promoting social integration based', 'social inequality achieved', 'social media resources', 'users social fabric', 'social impact', 'social debates', 'social interaction', 'social science problems', 'social media experience', 'social scientists alike', 'social learning strategy', 'social theory helps', 'broader social impacts', 'social learning', 'social disparities', 'simulating social behavior', 'turn reinforce societal biases', 'social learning method', 'rapidly solve pressing social problems', 'social image annotation', 'internet social debate', 'existing societal biases', 'social pooling layer']),
        ReplacementConcept('operating system state', 4, ['system state information', 'full system state', 'system state variables', 'current system state', 'system state transition depends', 'phantom state blocks', 'structures called cell state', 'control-loop state machine', 'state machines', 'state block', 'finite state machine', 'juvenile resource building state', 'matrix product states', 'state partition', 'source object state', 'state feature extractor', 'product states', 'non-null state object', 'predict future object states', 'load state dict', 'checkerboard states', 'environment outputs random state', 'ground state configurations displays', 'rich ground state phase diagram', 'output state σ', 'end-to-end scene labeling systems', 'ground truth state', 'output state space', 'ground state', 'state encoder’s output', 'maps continuous states', 'sink state v3', 'ground state energy', 'maps states st', 'web system operators', 'pass state flag', 'car state includes', 'agent’s internal state representation interchangeably', 'state variables', 'steady state position', 'continuous state variable', 'raw state variables', 'triple rift system', 'agent’s state', 'raw pixel states', 'order book state', 'order book states', 'discrete hidden state variables', 'learner’s knowledge state', 'agent’s current sensed state']),
        ReplacementConcept('data provenance', 3, ['administrative sources data', 'explain arbitrary data sources', 'source data longer', 'related data sources', 'untrusted data sources', 'geo-distributed data sources revolve', 'labeled source data', 'data source', 'test data fault source', 'source domain data set', 'data fault sources', 'additional data sources', 'paired speech-translation data source', 'multiple data sources', 'source data center', 'source data set', 'complex data sources', 'data fault source', 'original labeled source data', 'data sources', 'source domain data', 'open source big data technology', 'distributed data sources', 'source code data', 'isolated data sources', 'source code edit data', 'data place bounds', 'ground truth data', 'data efficient machine learning workshop', 'structured web data', 'data dependent error bounds', 'data dependent generalization error bounds', 'data center control', 'hyperscale data centers', 'data center networks', 'data center', 'data centers', 'build data centers', 'entity shares data', 'data center control problem', 'data user aggregates', 'data center scale', 'distributed data centers', 'single data center', 'data processing methods', 'observation data trough', 'temporal data processing', 'fixed-size set data structure', 'sample-efficient data structure', 'distributed data processing']),
        ReplacementConcept('high performance', 3, ['high predictive performance', 'approach guarantees high performance', 'highest accuracy performance measures', 'high performance provided', 'achieve high performance', 'achieving high performance', 'high quality performances', 'desired high performance', 'reach high performance', 'high performance system', 'state-of-the-art high performance computing facilities', 'high performance computing', 'high predictive performance results', 'high probability events', 'highest scoring single episode', 'high dimensional case', 'high communication cost', 'common high dimensional cases', 'high dimensional action spaces', 'highest success rate', 'high training loss', 'high error rate', 'high error rates', 'high reconstruction error', 'high resource usages', 'high labeling effort', 'predicting renal failure remains high', 'high priority jobs', 'high performing models', 'highest execution time', 'upscaled versus high resolution noise', 'high resistance state', 'total end-use carbon emissions highest', 'high weight means', 'human attempt high dimensional visualization', 'high dimensional time series', 'high school education', 'high order tensor', 'high variance issues', 'high trait anxiety', 'high dimensional problem space', 'high pass filter fails', 'high level representations generated', 'high quality research', 'high level language', 'high resolution observations', 'highest conditional probability', 'high quality machine learning model', 'high dimensional design space', 'high pass filter correlates']),
        ReplacementConcept('debug system state', 2, ['system state information', 'full system state', 'system state variables', 'current system state', 'system state transition depends', 'phantom state blocks', 'structures called cell state', 'control-loop state machine', 'state machines', 'state block', 'finite state machine', 'juvenile resource building state', 'matrix product states', 'state partition', 'source object state', 'state feature extractor', 'product states', 'non-null state object', 'predict future object states', 'load state dict', 'checkerboard states', 'environment outputs random state', 'ground state configurations displays', 'rich ground state phase diagram', 'output state σ', 'end-to-end scene labeling systems', 'ground truth state', 'output state space', 'ground state', 'state encoder’s output', 'maps continuous states', 'sink state v3', 'ground state energy', 'maps states st', 'web system operators', 'pass state flag', 'car state includes', 'agent’s internal state representation interchangeably', 'state variables', 'steady state position', 'continuous state variable', 'raw state variables', 'triple rift system', 'agent’s state', 'raw pixel states', 'order book state', 'order book states', 'discrete hidden state variables', 'learner’s knowledge state', 'agent’s current sensed state']),
        ReplacementConcept('implement sophisticated security features', 2, ['add security features', 'sophisticated data visualization tool', 'sophisticated test generation tool', 'feature enhancing tools', 'sophisticated machine learning models', 'developing sophisticated concepts', 'sophisticated base model classes', 'sophisticated data structure', 'sophisticated portfolio strategies', 'commercial cyber security systems', 'sophisticated network model trained', 'network structure features', 'sophisticated classification models', 'sophisticated disentangled representation learning', 'sophisticated policy gradients', 'sophisticated auxiliary components', 'filter methods feature selection', 'sophisticated aggregation methods', 'feature layer', 'initial layers’ features', 'feature layers', 'implement entropic regularization', 'secondary structure features', 'layer learn label-specific features', 'attacker key features', 'machine learning security', 'feature extractor part', 'sophisticated domain specific similarity function', 'feature extractor network fext', 'auxiliary features describing objects', 'input feature extractor', 'kernel feature space', 'feature space equals', 'symmetry invariant feature maps', 'smaller feature map sizes', 'feature personal status', 'dependency parse features', 'frame level features', 'entity includes features', 'student feature extractor', 'implements training-time poisoning attacks', 'sophisticated methods', 'base graph features', 'student’s feature space', 'feature learning problem', 'feature extractor fθ', 'outer product features', 'current frameworks implements tools', 'basic feature extractor', 'private feature extractor']),
        ReplacementConcept('today’s computing environments', 2, ['complex environment’s increased simulation cost', 'agent’s environment consists', 'cloud computing environments', 'defending cloud computing environments', 'target agent’s environment', 'large distributed computing environments', 'agent’s computed motion template', 'explainee’s task domain knowledge', 'domain’s terminology axioms', 'patient’s primary condition group', 'computing equilibrium solutions', 'final search result’s quality', 'web conference’s challenges', 'adversary’s equilibrium distribution', 'continuous state space environments', 'patient’s medical history', 'node’s initial degree di', 'exceed human expert’s ability', 'original gradient’s magnitude', 'model’s discriminative power', 'model’s predictive power', 'adversary’s strategy space', 'standard deep learning packages today', 'space environments', 'simulated object pushing environment', 'today’s neural networks', 'deep neural networks today', 'learning curve’s usage', 'greatly increased user’s motivation', 'controllable object’s shape', 'today’s neural network architectures', 'weight reviewer’s recent reviews', 'synaptic connection’s modification', 'computed top-1 accuracy', 'massive computing power', 'limited computing power', 'computing power', 'average accuracy computed', 'advanced computing power', 'past environment states', 'controlled synthetic environment', 'previously learned environments', 'technical computing environment', 'handle large state environments', 'realistic simulated environment', 'open world production environment', 'directional path navigation environment', 'atari learning environment', 'continuous state-action environments', 'effective test environment']),
        ReplacementConcept('key design choice', 2, ['key design principles', 'key design features', 'design choices', 'important design choice', 'key machine learning task', 'central machine learning task', 'summarizing key approaches', 'describe fundamental processes', 'fundamental belief propagation algorithm', 'key research issues', 'fundamental construction block', 'made key contributions', 'fundamental research tasks', 'establish fundamental machine learning principles', 'fundamental networking task', 'fundamental statistical task', 'key machine learning models', 'uncovering key observations', 'key few-shot learning problem', 'learn fundamental imagery transformations', 'key insight motivating', 'key semantic patterns', 'fundamental algorithm framework', 'fundamental machine learning research', 'key analysis steps', 'key research elds', 'fundamental arithmetic operations', 'fundamental mathematical concepts', 'key user experience metrics', 'central preference order', '16 key roll call votes', 'registry key paths', 'key variable values', 'key missing detail', 'central machine estimates', 'primal form seeks', 'key words impact', 'foreign key relationships', 'key performance metrics', 'key studies pertaining', 'fundamental difficulties faced', 'key question left unanswered', 'fundamental theoretical questions', 'key modeling technique enabled', 'fundamental physical principles', 'key open question', 'key obstacles limiting', 'central open question', 'direct fundamental questions', 'address key questions']),
        ReplacementConcept('limited main memory', 2, ['main memory plays', 'called main memory', 'main memory stores 8', 'limited memory bundle method', 'entire main memory', 'limited memory capacity', 'limited memory variety', 'large-capacity main memory part', 'main underlying idea', 'main practical issues', 'main issues discussed', 'kth principal component ~u', 'principal components analysis', 'orthogonal principal components', 'main model achieves low loss', 'weakly trained main model', 'limited training samples', 'multi-scale local principal component analysis', 'one-step models offer limited merits', 'principal component analysis', 'limited sample sizes', 'top 5 principal components', 'main model process', 'limited learning capabilities', 'principal components', 'sparse principal component', 'main model', 'main model’s error', 'principal component', 'principal component vectors', 'limited sample diversity', 'main quantity examined', 'principal component eigenvectors', 'principal component scores', 'sparse principal component analysis problem', 'main movie types comedy', 'limited communication', 'main types errors related', 'principal label space transformation', 'main discussed points', 'limited contingency planning', 'main geometric aspect', 'limited probability assigned', 'limited algorithmic space', 'dataset’s main table', 'limited paired data context', 'limited observed data', 'limited label information', 'main performance metric', 'limited computation power']),
        ReplacementConcept('40 years ago', 2, ['speculative twenty years ago', '000 years ago', 'fifty years ago', 'experiment ten years ago', 'recent years learning-to-learn', 'recent years', 'recent years deep neural networks', 'years advanced malware', 'recent years achieved human-competitive', 'recent years proven', 'average schooling years', 'recent past years', 'study adults 85+ years', 'recent years convolutional neural networks', 'past thirty years', 'key research elds', 'recurrence period density entropy', 'subsequent time periods', 'recurrence period', 'time period bef', '1 year survival period', 'technologically advanced period', 'entire training period', 'possibly long periods', 'one-year look-back period', 'test reveal period', 'longer training period', 'output periods', 'temporal period ∆t', 'buffer period length', 'long time period', 'rate update period', 'multiple time periods', 'finite training period', 'biological critical period', 'regular sampling period', 'wave period', 'policy gains maturity', 'initial developmental period', 'fixed time period', 'entire 30-day period', 'missing phase', 'truck hauling duration', 'phase transition point', 'low-temperature ferromagnetic phase region', 'one-time training stage', 'circularly shifted 10 times', 'max epochs', 'parameter selection stage', 'supervisor crashed 54 times']),
        ReplacementConcept('operating system requires', 2, ['building human-like intelligent systems requires', 'systems budget needed', 'unknown time evolving system', 'biological natural systems', 'real robotic systems', 'crossed wires represent multiple systems', 'good concept representation learning system', 'standard recommender system metrics', 'human auditory system', 'general type-2 fuzzy systems', 'quantum linear system algorithm', 'efficient machine learning systems design', 'machine learning systems considers', 'actual intelligent maritime monitoring systems', 'submitted online learning systems', 'computational model system', 'trustworthy machine learning systems', 'traditional system', 'model complex systems consisting', 'visual system', 'automatic shape control system', 'expect broadly applicable intelligent systems', 'automated feedback system based', 'chaotic systems', 'economical power system operations', 'heterogeneous multi-agent systems', 'conscious systems', 'popular recommendation systems datasets', 'learn non-linear system evolutions', 'continuous dynamical systems', 'stochastic system', 'simple model systems showed', 'trained system', 'incremental classification systems', 'machine learning systems design', 'conventional federated systems', 'complex system', 'early expert systems', 'existing motion planning systems', 'engineering trustworthy systems', 'multiple classifier systems', 'flexible underlying learning system', 'artificial intelligence systems', 'construct mechanistic systems', 'actual physical systems', 'complex software-intensive systems', 'universal induction system', 'robust aggregation system', 'existing workflow systems', 'noisy continuous dynamical systems']),
        ReplacementConcept('data access', 2, ['access live streaming data', 'data access strategy', 'varying data size access', 'data access methods', 'data protection rights', 'data type abstraction', 'construct table-structured data representations', 'specific data quality characteristics', 'architecture models meta data', 'transforming feature data', 'entire model spectral data', 'data parallel framework', 'generates random data features', 'common feature and/or data space', 'data stream computational model', 'model spectral data', 'flipped data model', 'data’s internal features', 'target framework profile included data', 'data quality models', 'data generating models', 'big quantum data', 'distributed data processing frameworks', 'quantum data', 'data generating model', 'data mining process model', 'data driven model training', 'noise model data', 'relational data model', 'existing educational data mining models', 'data vector element', 'model highly heterogeneous data', 'feature’s data type', 'model performance data', 'quantum data structure', 'algorithms sort data', 'ensemble-based data assimilation framework', 'data driven models', 'expanded data features', 'data analysis framework', 'structured data representations', 'data representation learning methods', 'specific data type', 'single data point', 'data vectors', 'missing data points', 'closest data vectors', 'data points arrived', 'information access 2018 quantum theory', 'efficient data representation']),
        ReplacementConcept('hardware mechanisms', 2, ['machine learning mechanisms', 'reset mechanism', 'support hardware accelerated tensor processing', 'basic splicing mechanism', 'output perturbation mechanism', 'data release mechanisms', 'lock free mechanism', 'implemented encoder-decoder attention mechanism architecture', 'entity level attention mechanism', 'leverage hardware acceleration', 'transient hardware error', 'learner’s prediction mechanism', 'consumer hardware', 'underlying hardware layer', 'external objective feedback mechanism', 'hardware reverse engineering', 'graphics hardware', 'generation quantum hardware', 'relevance feedback mechanisms', 'specialized hardware', 'integrate attention mechanisms', 'top level attention mechanism', 'attention mechanism', 'generalization mechanism', 'peek mechanisms', 'packaging signal mechanism functions', 'learning mechanisms', 'existing attention mechanisms', 'early stop mechanism', 'certified removal mechanism', 'efficient hardware implementation', 'bias regulation mechanism', 'removal mechanism', 'combined attention mechanisms', 'true underlying mechanism', 'important mechanisms supporting', 'newly proposed learning mechanisms', '-differentially private mechanism', 'hard attention mechanism', 'custom hardware architectures', 'efficient hardware realization', 'detection mechanism', 'security mechanisms', 'edge hardware platforms', 'proposed mechanism', 'data generation mechanism', 'underlying missing data mechanism', 'specialized machine learning hardware', 'differentially private mechanism', 'hierarchical structuring mechanism']),
        ReplacementConcept('provide unprecedented performance', 2, ['produced unprecedented success', 'unprecedented volume', 'gain unprecedented insight', 'true performance distribution', 'human performance includes knowledge', 'valid performance estimations', 'poor performance', 'evaluate average performance', 'convergence performance', 'compare algorithm performance', 'competitive classification performance', 'hyperparameter tuning performance', 'high predictive performance', 'superior performance compared', 'model disentanglement performance increases', 'consistently poorer performance', 'performance drops significantly faster', 'performance issues', 'relative performance improvement', 'demonstrate performance benefits', 'important performance index', 'obtain classification performance', 'anatomical sites improves performance', 'strongly hurt performance', 'class performance gain', 'optimizer tests classification performance', 'achieve satisfactory performance', 'display performance metrics', 'good comparable performance', 'approach attains superior performance', 'resampled training performance', 'observe significant performance gain', 'performance metric', 'communications performance enhancement', 'imitation learning performance', 'rendering equal prediction performance', 'performance counter values', 'temporal loss performance', 'performance results reported', 'true performance variance', 'performance guarantees', 'dropout strategy boost performance', 'layer successively increases performance', 'compare model performance', 'obtain good performance', 'test performance', 'few-shot classification performance', 'demonstrated outstanding performance', 'remarkable performance enhancement', 'theoretical performance guaranties']),
        ReplacementConcept('forty years', 2, ['recent years learning-to-learn', 'recent years', 'recent years deep neural networks', 'years advanced malware', 'speculative twenty years ago', 'recent years achieved human-competitive', '000 years ago', 'recent years proven', 'average schooling years', 'recent past years', 'fifty years ago', 'study adults 85+ years', 'recent years convolutional neural networks', 'past thirty years', 'experiment ten years ago', 'key research elds', 'recurrence period density entropy', 'subsequent time periods', 'recurrence period', 'time period bef', '1 year survival period', 'technologically advanced period', 'entire training period', 'possibly long periods', 'one-year look-back period', 'test reveal period', 'longer training period', 'output periods', 'temporal period ∆t', 'buffer period length', 'long time period', 'rate update period', 'multiple time periods', 'finite training period', 'biological critical period', 'regular sampling period', 'wave period', 'policy gains maturity', 'initial developmental period', 'fixed time period', 'entire 30-day period', 'missing phase', 'truck hauling duration', 'phase transition point', 'low-temperature ferromagnetic phase region', 'one-time training stage', 'circularly shifted 10 times', 'max epochs', 'parameter selection stage', 'supervisor crashed 54 times']),
        ReplacementConcept('parallel computing environments', 2, ['16 parallel simulation environments', 'parallel computing stages', 'parallel computing platform', 'cloud computing environments', 'defending cloud computing environments', 'large distributed computing environments', 'employed parallel dither w/dropout', 'computing equilibrium solutions', 'parallel data streams', 'parallel data processing', 'parallel agents increases', 'out-of-domain parallel training data', 'parallel coordinates plots comparing', 'parallel coordinate plots', 'parallel belief propagation', 'parallel coordinates plot', 'parallel coordinate plot', 'parallel weak learners', 'parallel texts', 'parallel soft-max layers', 'create parallel classifications', 'efficient parallel implementation', 'parallel slow-weight path', 'parallel computation', 'fast parallel computations', 'parallel application', 'massively parallel models', 'parallel subgradient algorithms', 'parallel programming models', 'parallel subgradient algorithm', 'parallel algorithm', 'parallel dcd algorithm', 'highly parallel device', 'parallel parameter learning', 'massively parallel hardware', 'parallel stochastic optimization', 'parallel links `℘', 'past environment states', 'controlled synthetic environment', 'previously learned environments', 'technical computing environment', 'handle large state environments', 'realistic simulated environment', 'open world production environment', 'directional path navigation environment', 'atari learning environment', 'continuous state-action environments', 'effective test environment', 'simple dynamic learning environment', 'environments alongside human operators']),
        ReplacementConcept('ensuring total data privacy today', 1, ['entire model spectral data', 'entire training data set', 'entire training data', 'entire data set', 'preserving data privacy', 'privacy preserving data analysis', 'time preserving data privacy', 'improving data privacy', 'generate privacy preserving data', 'data privacy', 'preserve data privacy', 'protect data privacy', 'ensure data interpolation', 'ensure correct data organization', 'entire 4× 4 collection', 'entire group altogether', 'entire public test set', 'entire 75 image classes', 'entire problem set', 'entire covariate set', 'entire filter set', 'entire training set', 'entire unlabeled set learned', 'entire past information', 'entire feature space', 'total state space', 'entire state space', 'total sample space', 'entire design space', 'total observation pairs', 'entire sequence history', 'standard deep learning packages today', 'entire rewarding history', 'total communication complexity', 'total uncertainty reduction', 'total computational complexity', 'federated data presents', 'total accuracy lower', 'entire network results', 'entire deep neural network', 'entire network architecture', 'entire capsule network', 'entire network', 'entire network concurrently', 'total probability α', 'entire knowledge bases', 'entire event log', '50 total weak signals', 'entire probability distribution', 'entire parameter interval']),
        ReplacementConcept('difficult software engineering challenges', 1, ['software engineering life cycle stages', 'software engineering life cycle', 'general software engineering related words', 'software engineering research communities', 'software engineering practice', 'software engineering practices', 'software engineering work-flow', 'software engineering areas', 'software engineering applications', 'normal software engineering projects', 'software engineering projects', 'makes software engineering', 'practical software engineering applications identified', 'automate software engineering tasks', 'software engineering', 'industrial software applications', 'application poses interesting challenges', 'contributions address challenges', 'difficult relation extraction task', 'hard classification problem', 'difficult language semantics', 'difficult target task', 'difficult data problems', 'hard combinatorial optimization problem', 'notoriously computationally difficult tasks', 'hard coding shared', 'difficult task solvable', 'difficult mathematical tasks', 'hard exploration problems', 'increasingly difficult problems', 'difficult problems', 'algorithmically hard problems', 'computationally hard problems', 'solve difficult problems', 'solving hard problems', 'hard combinatorial problem', 'equally difficult problem', 'necessarily capture difficult', 'master difficult control policies', 'hard data mining', 'support software agents', 'system protection software', 'software development terms', 'software development process', 'improving software quality', 'iterative hard thresholding algorithm', 'hard decision combining', 'hard constraints imposed', 'hard constraints', 'handle hard constraints']),
        ReplacementConcept('basic resource management functionality', 1, ['basic functionalities', 'resource management problem', 'network resource management', 'network slicing resource management', 'resource management', 'wireless resource management', 'perform basic accuracy measuring experiments', 'basic set operations', 'included basic implementations', 'basic gradient descent', 'basic safety message', 'applies basic probability measures', 'small basic operations', 'basic arithmetic operations', 'facilitate basic operations', 'basic statistical functions', 'accomplish basic data analysis tasks', 'basic geometric case', 'basic command line interface', 'section highlights basic ideas', 'basic data analysis', 'basic search algorithm', 'basic differential privacy training workflow', 'basic interaction comprises', 'basic sample means', 'executing basic support services', 'basic procedure exist', 'provide basic matrix calculation', 'basic chemical representation', 'overestimate resource requirements', 'basic deep neural network architecture', 'understand basic health information', 'basic network structure', 'basic data assumption', 'basic feed-forward neural network', 'basic health data', 'show basic ideas', 'learn basic skills', 'basic idea', 'applications’ basic guarantees', 'basic image transformations', 'mobility management', 'exchanging basic machine learning metadata', 'basic machine learning analysis', 'basic programming concepts', '1 introduces basic notations', 'introduce basic notation', 'basic local sentences', 'briefly introduce basic notations', 'basic local sentence']),
        ReplacementConcept('mistakenly posted online', 1, ['mistakenly classi fied', 'amt job posting', 'posting unrealistic prices', 'preprocess comments posted', 'read status updates posted', 'warning sign attached', 'fully connected layer', 'fully connected penultimate layer', 'connected component', 'standard deep fully connected networks', 'densely connected convolutional networks', 'maximal connected components', 'hidden nodes connected', 'connected directed acyclic graphs', 'directly connected neighboring nodes', 'multiple fully connected layers', 'multi-class sequence tagging task', 'green lines connecting', 'identical connected neurons', 'simply fully connected', '3 fully connected layers', 'fully connected neural network', 'manually tagged samples', 'fully connected linear layers', 'tagging problem', '8 fully connected layers', 'fully connected learning space', 'final fully connected layer', 'final fully connected', 'identify connected components', 'fully connected neural networks', 'deep fully connected networks', '3 densely connected hidden layers', 'fluorescently tagged proteins26', 'remaining connected components', 'hundred recurrently connected neurons', 'largest connected component', 'fully connected single-head networks', 'locally connected regions', 'individual approaches harnessing', 'densely connected layer', 'input layer sparsely connected', 'sequence tagging model', 'full connected hidden layer', 'connected synapse belonging', 'actual goal appended samples', '2-layer fully connected network', 'wearable accelerometer mounted', 'larger outermost sectors connect', 'fully connected de ×']),
        ReplacementConcept('complex imperative code', 1, ['complex wavelet signals', 'consecutive complex signal values', 'literature presenting complex', 'complex sensory inputs', 'complex hypothesis spaces', 'manipulating complex spaces', 'complex systems space', 'complex analytic subsets', 'complex projective space', 'complex aggregation schemes', 'capture complex relations', 'complex item hierarchy', 'implement increasing complex convex functions', 'learn complex mappings', 'approximating complex functions', 'highly complex function', 'complex function based', 'complex cost functions', 'forming complex functions', 'complex function classes', 'complex relational functions', 'gain profile complex optimization problem', 'eventually learn complex programming idioms', 'inherently complex symbolic objects', 'complex neural network architectures', 'exploring complex dependencies', 'building complex network architectures', 'complex neural networks', 'high-dimensional complex data', 'recent complex neutral network models', 'complex sensor data', 'complex data sets', 'complex international supply chain', 'complex data structure', 'existing complex neural networks', 'complex data sources', 'complex feature combinations', 'complex multi-layered convolutional neural networks', 'complex environment’s increased simulation cost', 'complex real-world data distribution', 'complex data', 'complex numbers xi', 'complex model exhibits large variance', 'complex equations', 'complex individual-level time series dataset', 'complex inhand manipulation skill', 'complex representations', 'complex matrix', 'learn complex feature representations', 'complex design patterns found']),
        ReplacementConcept('modern data-centric life', 1, ['modern gender recognition systems', 'modern day businesses', 'modern deep neural networks', 'modern network function virtualization technologies', 'modern feedforward network', 'modern autoregressive density estimators', 'modern format', 'successful modern examples', 'causing modern web browsers', 'modern representation learning algorithms', 'modern web technologies', 'modern format era', 'modern machine learning approaches', 'modern machine learning classifiers', 'modern deep learning', 'modern over-parametrized learning', 'modern machine learning methods', 'modern deep learning frameworks', 'modern deep learning tools', 'modern machine learning practice', 'modern machine learning techniques', 'modern machine learning algorithms', 'modern trained machine learning models', 'modern machine learning tools', 'modern reinforcement learning methods', 'modern deep learning tool', 'modern machine learning', 'modern reinforcement learning', 'modern computer vision task', 'modern techniques', 'modern practical applications', 'leveraging modern features', 'modern computer vision research', 'modern scanning technology', 'modern convolutional architecture', 'modern containerization tools', 'current life savings', 'software engineering life cycle stages', 'machine learning life cycle', 'entire life cycle', 'system life cycle', 'specific life cycle stage', 'brilliant career life', 'quantum artificial life', 'artificial life', 'save human life', 'permeate daily life', 'large modern datasets', 'software engineering life cycle', 'civic life']),
        ReplacementConcept('security checking code', 1, ['security cases requires low probability', 'network security domain', 'security data', 'network security', 'network security applications', 'theoretically-grounded security guarantees', 'network security based', 'code size', 'compute security evaluation curves', 'core security requirement', 'source code portion', 'benchmarks security requires moving', 'major security issue', 'security evaluation curves', 'increase code coverage', 'empirical security evaluation', 'publish messy code', 'papers released code', 'code submission', 'existing scientific code', 'add security features', 'security contexts typical', 'code line replacement', 'static code features', 'cyber security', 'perform automated code reviews', 'code submission policy', 'machine code', 'error correcting codes', 'public code notebooks', 'hash codes', 'regulatory code', 'security evaluation', 'initial source code file', 'national security perspective', 'write high-level computer code', 'sparse code', 'single code representation', 'code base', 'program source code', 'sparse conjunctive codes', 'perfect code coverage', 'standard security directory', 'starter code base', 'solver modules represent application code', 'generate valid source code', 'machine learning security', 'source code files', 'data and/or code', 'built-in code editor']),
        ReplacementConcept('demonstrated comparable bandwidth', 1, ['comparable ethical standards', 'comparable qualities', 'hard cutoff yield comparable results', 'obtaining comparable qualities', 'demonstrate comparable accuracy', 'comparable software package', 'comparable computational budget', 'achieve comparable test accuracies', 'classification accuracy comparable', 'comparable robustness measure', 'comparable disentangled representation', 'good comparable performance', 'provide comparable results', 'show comparable performance', 'achieve comparable performance', 'achieves comparable results', 'achieve comparable results', 'aggregate error rates comparable', 'making training time comparable', 'easily comparable reports', 'achieve performance comparable', 'reach comparable results', 'obtain comparable performance', 'proposed approach comparable performance', 'comparable learning performance', 'evaluation results directly comparable', 'comparable numerical performance', 'comparable computational load', 'information entropy signatures presented', 'low bandwidth', 'communication bandwidth required', 'low bandwidth outputs', 'showed higher probability', 'benchmark data sets demonstrate', 'reduce bandwidth cost', 'part presents policies', 'phase space diagrams showing', 'two-dimensional feature space shown', 'language conscious demonstrated', 'random object presented', 'experiments show high accuracy', 'resume showing input patterns', 'data sets demonstrate', 'figures shown indicating rank correlation', 'test accuracies presented', 'user data presented', 'regression networks show significantly', 'findings show interesting combinations', 'sub-reward function shown', 'presented potential function helps']),
        ReplacementConcept('motivating multi-level main memory systems', 1, ['main memory stores 8', 'large-capacity main memory part', 'main memory plays', 'called main memory', 'entire main memory', 'shared memory system', 'good concept representation learning system', 'concept representation learning systems', 'accurate hidden state representations motivated', 'main data structure', 'main building block', 'main underlying idea', 'main practical issues', 'main issues discussed', 'main movie types comedy', 'main computational load', 'main notable innovation', 'main test bench', 'main research output', 'main quantity examined', 'single memory structure', 'abstract belief system', 'flat memory structure', 'dual memory structure', 'proposed dual memory structure designed', 'proposed dual memory structure', 'conventional single memory structure', 'successful belief systems', 'principal angle condition', 'bank’s image recognition system', 'document image understanding system', 'main model achieves low loss', 'principal component scores', 'principal label space transformation', 'drone’s image recognition system', 'art image recognition system', 'image retrieval systems', 'image analysis systems', 'main model process', 'main model’s error', 'sparse principal component analysis problem', 'proposed memory structure consists', 'principal research scientist', 'kth principal component ~u', 'principal components analysis', 'orthogonal principal components', 'weakly trained main model', 'multi-scale local principal component analysis', 'principal component analysis', 'top 5 principal components']),
        ReplacementConcept('data readily analyzable', 1, ['readily share data', 'readily teachable set', 'expected decomposable probability', 'implements decomposable scoring function', 'idea readily extends', 'decomposable attention model', 'readily perform direct sampling', 'readily transfer well-understood techniques', 'readily accommodate multiple simultaneous dancers', 'readily utilize algorithms', 'platform readily evaluated', 'decomposable probability-of-success metrics', 'raw cdr data', 'large redundant data sets', 'small computers recording data', 'unseen test data', 'training data xvn', 'structured data representations', 'preserving data privacy', 'data representation learning methods', 'data processing methods', 'analyze social data', 'reported demographic data', 'non-expert human demonstration data', 'unseen data distributions', 'creates noisy non-linearly separable data', 'underlying user data', 'specific data type', 'observation data trough', 'naive data augmentation techniques', 'data sets compared', 'full data set', 'well-studied real-world data', 'publicly release synthetic data', 'mixed-type tabular data', 'data assimilation algorithms', 'inspect historical training data', 'limited paired data context', 'single data point', 'detecting erroneous data', 'missing data range 90- 98%', 'acquired training data', 'labeling sequence data', 'data vectors', 'vertically partitioned data', 'training data selection', 'user action data', 'abstract raw sensor data', 'data augmentation techniques', 'large-scale high-dimensional data']),
        ReplacementConcept('considered forty years ago', 1, ['speculative twenty years ago', '000 years ago', 'fifty years ago', 'experiment ten years ago', 'recent years learning-to-learn', 'recent years', 'recent years deep neural networks', 'recent years achieved human-competitive', 'recent years proven', 'average schooling years', 'recent past years', 'recent years convolutional neural networks', 'key research elds', 'years advanced malware', 'considered gain levels range', 'considered classical deep', 'variational indexes considered', 'lecture videos viewed', 'jointly considered data universes', 'considered working modality', 'considered options discovery', 'hedge funds considered', 'considered substantial agreement', 'considered latent variables', 'considered hidden variables', 'analyze dropout learning regarded', 'time slice considered', 'considered methods', 'viewing angle result', 'ensemble learning regarded', 'samples considered correct', 'considered deterministic normalization techniques', 'training tasks considered', 'users’ viewing preferences', 'considered declarative specification', 'study adults 85+ years', 'interactive protocol considered', 'estimation setting considered', 'considered deep-learning-asa-service computation', 'transfer scenarios considered', 'decision features considered', 'past thirty years', 'protected attribute considered', 'considered predictions set', 'learning restrictions considered', 'considered multi-step models', 'features considered irrelevant', 'learning-to-learn considered optimizing parameters', 'test machines considered', 'financial instrument considered']),
        ReplacementConcept('complex security policies', 1, ['complex aggregation schemes', 'complex perception problem', 'complex road curvatures', 'complex prediction problems similar', 'exploring complex dependencies', 'gain profile complex optimization problem', 'complex real-world problems', 'overwhelmingly complex problem', 'solving complex problems specially', 'solving complex visual problems', 'complex optimization problem', 'complex decision-making problems', 'solving complex problems', 'complex regression problem', 'consecutive complex signal values', 'complex representations', 'learn complex feature representations', 'complex hypothesis spaces', 'learn complex representations', 'manipulating complex spaces', 'complex systems space', 'complex projective space', 'complex environment’s increased simulation cost', 'recent complex neutral network models', 'complex obfuscation methods', 'complex feature combinations', 'modeling complex environments', 'visually complex environment', 'complex environment dynamics', 'complex global operation', 'learn complex behaviour', 'complex locomotion environments', 'complex machine learning models', 'complex model exhibits large variance', 'training complex generative models', 'complex channel models', 'complex inhand manipulation skill', 'complex design patterns found', 'complex wavelet signals', 'complex pattern memorization', 'automatically recognize complex patterns', 'complex analytic subsets', 'complex real-world data distribution', 'complex multi-modal model', 'complex features combined', 'model complex systems consisting', 'constructing complex mathematical models', 'learn complex models', 'complex model architecture', 'simplicial complex models naturally define']),
        ReplacementConcept('customize control-plane operations', 1, ['small basic operations', 'load additional operations', 'arithmetic operations', 'involves costly convolution operations', 'stopping usual business operations', 'approximate arithmetic operations', 'general reduce operations', 'economical power system operations', 'fundamental arithmetic operations', 'pooling operations make outputs gain', 'basic arithmetic operations', 'facilitate basic operations', 'evolutionary operations proposed', 'performing matrix operations', 'basic set operations', 'real-time network operations', 'multiplication operations making', 'matrix operations requires', 'performing genetic operations', 'perform non-standard tensor operations', 'utilized arithmetic operations', 'fast bit-wise operations', 'simple vectorial operations', 'perform type-specific operations', 'sparse collective operations', 'efficient boolean vector operations', 'read operations precede', 'represent simple operations', 'defining quantum operations', 'customized model training approach', 'customized model training', 'pooling operations', 'weighting operations ⊗1', 'graph pooling operations', 'adding user-defined operations', 'user adds operations', 'runtime operations increase', 'numpy’s array operations', 'power system operations', 'customized data representations', 'data cleaning operations', 'global/local synchronization operations', 'customized machine learning architectures', 'customized model function', 'customized point mass', 'layer operations', '10k merge operations', 'perform edit operations', 'require 7 vector operations', 'chain augmentation operations']),
        ReplacementConcept('configuration tools today', 1, ['automatic configuration tools', 'so-called automatic configuration tools', 'automatic layout generation tool', 'layout generation tool', 'drives machine learning today', 'learning machines today', 'machine learning pipeline configurations', 'ground state configurations displays', 'today’s neural network architectures', 'sophisticated data visualization tool', 'data visualization tools', 'today’s massive academic output', 'machine learning tools', 'sophisticated test generation tool', 'subsequent learning tools', 'deep learning text categorization tool', 'deep learning tool', 'learning tools', 'popular neuropsychological screening tool', 'model-agnostic interpretation tools', 'chine learning tools', 'modern deep learning tools', 'state-of-the-art supervised dictionary learning tools', 'modern machine learning tools', 'supervised learning tools developed', 'modern deep learning tool', 'deep learning tools', 'geometric constellation shapes', 'environment configuration', 'learn geometric constellation shapes robust', 'geometric constellation shape', 'risk assessment tools', 'standard deep learning packages today', 'automatic differentiation tools', 'causal reasoning tools', 'visualization tools show', 'verification tool generates', 'primary article management tool', 'mixed-initiative design assistance tools', 'tools encourages discussions', 'predictive measurement tool', 'peer review tools', 'efficient problem configuration', '50- dimensional pose configurations', 'dnn hyper-parameter configuration problem', 'field configuration images', 'vision paper today', 'predictive modeling tool', 'today’s neural networks', 'superior tool users']),
        ReplacementConcept('storage class memory', 1, ['specific memory storage model', 'aggregate class representations', 'rich class representations', 'representation class consists', 'aggregated class representation', 'aggregated class representations', 'current data storage systems', 'memory impairment group', 'replay memory set', 'knowledge storage carrier', 'knowledge storage mechanism', 'probable image classes', 'entire 75 image classes', 'memory traffic', 'cache memory data', 'limited memory bundle method', 'controller’s experience memory set', 'short memory data', 'limited memory variety', 'user data memory', 'class imbalanced issue', 'class imbalance issue', 'ebm’s light memory usage', 'process’s memory footprint', 'long short term memory network', 'parametric concept class', 'finite concept class', 'memory network', 'privately learnable concept classes', 'original concept class', 'learner’s concept class', 'interesting infinite concept classes', 'long short term memory networks', 'concept class', 'concept class measures', 'concept classes included', 'infinite concept class', 'concept classes', 'general concept classes', 'definable concept classes', 'longshort term memory networks', 'restricted concept class', 'extended concept class', 'long short-term memory networks', 'class imbalanced training data', 'memory usage heavily depend', 'memory usage', 'memory usage compared', 'small memory usage', 'benchmark working memory tasks']),
        ReplacementConcept('social security numbers', 1, ['condition numbers 16', 'low condition numbers', 'social science problems', 'rapidly solve pressing social problems', 'unequal social groups', 'social media language', 'generic social network scenario', 'social network scenario', 'social network scenarios', 'social interaction mode', 'social graph', 'rich social graph', 'social network graphs', 'social network graph', 'social media information', 'social debates', 'reify racialized social inequality', 'social inequality achieved', 'internet social debate', 'analyze social data', 'social network company', 'popular social networks', 'great societal relevance', 'social welfare functions', 'popular social network', 'on-line social network', 'social network classification', 'social network disaster relevance', 'big social data', 'social media data', 'social data', 'social networks', 'social disparities', 'turn reinforce societal biases', 'societal concerns', 'promoting social integration based', 'social media resources', 'social image annotation', 'users social fabric', 'social impact', 'social interaction', 'encodes societal gender biases', 'social media experience', 'social scientists alike', 'social learning strategy', 'social theory helps', 'broader social impacts', 'social learning', 'social media companies', 'simulating social behavior']),
        ReplacementConcept('today’s file systems', 1, ['network file system', 'learning system’s behavior—to optimize', 'local file system', 'hadoop distributed file system', 'file system', 'storage file systems', 'device’s validation set', 'subject’s mobile device', 'system’s probability distribution', 'networked systems space', 'complex systems space', 'user’s machine learning script', 'output capsule’s pose', 'hinton’s capsule network', 'machine learning practitioner’s work', 'reward structure’s parameters', 'detector’s decision function', 'language processing system', 'natural language processing systems', 'drives machine learning today', 'learning machines today', 'previous section’s argument', 'machine log files', 'semi-structured machine log files', 'system life cycle', 'leveraging holder’s inequality', 'machine translation system', 'generator model’s output grows closer', 'final search result’s quality', 'agent’s camera orientation', 'generator’s parameters θ', 'robust aggregation system', 'adversary’s strategy space', 'power system', 'economical power system operations', 'power systems community', 'power system dataset', 'significantly en-hance power system flexibility', 'power system operations', 'power system framework', 'system complexity', 'power system testbed', 'accurately simulate power system dynamics', 'patient’s primary condition group', 'authentic power system dataset', 'power systems communities', 'today’s neural network architectures', 'water level control system', 'learner’s knowledge level', 'warning sign’s effects']),
        ReplacementConcept('cloud vendor’s offering', 1, ['cloud computing vendors provide', 'trader’s risk aversion', 'agent’s computed motion template', 'agent’s video clips', 'final search result’s quality', 'greatly increased user’s motivation', 'user’s knowledge', 'learner’s knowledge state', 'learner’s knowledge', 'learner’s knowledge level', 'paper’s reported results', 'cloud computing providers', 'cloud services providers', 'input point clouds', 'input point cloud', 'teacher’s hypothesis', 'teacher’s expected answer', 'answer network’s input vector xt', 'neural network’s explanation', 'applied scientist’s skill set', 'user’s machine learning script', 'learner’s policy', 'user’s underlying intent', 'user’s prior belief', 'user’s specific purpose', 'user’s base table', 'incremental learner’s performance', 'user’s gesture takes', 'user’s mental image', 'user’s ego network', 'improve single learner classifier’s performance', 'user’s mental map', 'patient’s primary condition group', 'agent’s discounted return', 'agent’s policy network', 'agent’s body parts', 'agent’s policy based', 'agent’s intrinsicallymotivated rewards', 'agent’s state', 'learning agent’s parameters', 'single agent’s data', 'agent’s expected return', 'target agent’s policy', 'agent’s camera orientation', 'agent’s policy pass', 'agent’s environment consists', 'mc rl’s trained agent', 'agent’s component', 'agent’s algorithm takes', 'target agent’s parameters']),
        ReplacementConcept('isolated system environment', 1, ['maze environment aim', 'unique systems challenges', 'systems challenges', 'drone’s image recognition system', 'bank’s image recognition system', 'art image recognition system', 'automated speech recognition systems', 'facial recognition systems', 'face recognition system', 'blocks world environment', 'train face recognition systems', 'handwriting recognition systems', 'disease recognition system', 'modern gender recognition systems', 'networked systems space', 'electronic safety related systems', 'system life cycle', 'safety critical systems', 'complex systems space', 'simulated object pushing environment', 'robot arm environment', 'robot arm environments', 'power system', 'open world production environment', 'economical power system operations', 'wireless environments', 'power systems community', 'introduced ranking system', 'environment outputs random state', 'power system dataset', 'significantly en-hance power system flexibility', 'power system operations', 'power system framework', 'system complexity', 'real world environment', 'power system testbed', 'intentionally exploit system vulnerabilities', 'accurately simulate power system dynamics', 'procedurally generated platform environments', 'commercial cyber security systems', 'authentic power system dataset', 'power systems communities', 'grid world environments', 'learning environment remains unchanged', 'million environment steps', 'water level control system', 'base execution environment', 'environment outputs', 'isolated optimization techniques result', 'inside isolated components']),
        ReplacementConcept('strong data provenance system', 1, ['strong data processing inequality', 'strong data extraction process', 'training data show strong clusters', 'data discovery system', 'current data storage systems', 'data discovery systems', 'administrative sources data', 'explain arbitrary data sources', 'source data longer', 'related data sources', 'untrusted data sources', 'geo-distributed data sources revolve', 'labeled source data', 'data source', 'test data fault source', 'source domain data set', 'data fault sources', 'additional data sources', 'paired speech-translation data source', 'multiple data sources', 'source data center', 'source data set', 'complex data sources', 'data fault source', 'original labeled source data', 'data sources', 'source domain data', 'open source big data technology', 'distributed data sources', 'source code data', 'isolated data sources', 'source code edit data', 'robust aggregation system', 'strong class imbalance', 'stronger machine learning models', 'set system', 'set system induced', 'abstract set system', 'fundamental set systems', 'set system underlying', 'efficient data container', 'device collects data', 'social media data', 'device’s local data', 'geometric set systems', 'set system consisting', 'device’s validation data', 'data efficient machine learning workshop', 'show strong clustering', 'strong patient-provider network based']),
        ReplacementConcept('kernel bypass subsystems', 1, ['regularization kernel network', 'kernel network', 'kernel neural network', 'deep kernel network', 'feedforward network kernel', 'large margin feed-forward network kernel', 'bypass networks', 'kernel class', 'kernel combination space', 'base kernel matrix', 'resulting kernel matrix', 'learn kernel matrices', 'final kernel matrix', 'positive definite kernel matrix', 'kernel space', 'kernel matrix computed', 'learned kernel matrix', 'kernel space defined', 'typical squared exponential kernel matrix', 'valid kernel matrix', 'kernel target alignment', 'kernel matrix', 'pre-given kernel matrix', 'maximizing kernel target alignment', 'empirical kernel matrix', 'kernel matrices', 'nl × nl kernel matrix', 'synthetic kernel matrices', 'kernel feature space', 'kernel alignment', 'weighted degree string kernel', 'single layer kernels', 'layer kernel machine', 'information geometric kernel density estimation', 'pre-defined kernel functions', 'reverse diffusion kernel', 'kernel functions', 'computationally expensive kernel function', 'radial basis kernel', 'kernel function selection', 'kernel distance function', 'pre-defined kernel function', 'input kernel function', 'gaussian kernel function', 'basis kernel', 'parametric kernel functions', 'kernel target alignment criterion', 'partially shared kernel function', 'kernel function κ', 'radial basis kernels']),
        ReplacementConcept('simple data model', 1, ['simple knowledge base embedding model', 'simple data noising strategy', 'simple data augmentation strategy', 'architecture models meta data', 'simple models detailed', 'simple models describing', 'simple models', 'simple model', 'distributed data processing frameworks', 'simple interpretable models', 'generate simple interpretable models', 'data quality models', 'entire model spectral data', 'data parallel framework', 'data stream computational model', 'model spectral data', 'flipped data model', 'target framework profile included data', 'data generating models', 'data generating model', 'data mining process model', 'data driven model training', 'noise model data', 'relational data model', 'existing educational data mining models', 'model highly heterogeneous data', 'model performance data', 'ensemble-based data assimilation framework', 'data driven models', 'data analysis framework', 'model aggregation', 'standardized metadata models', 'sophisticated base model classes', 'base model class', 'incremental batch learning framework', 'framework batch active learning', 'employ model combination', 'permutation-invariant set model', 'defined-to-be-interpretable model classes equally interpretable', 'shifting model choice sets', 'finite model set', 'spline regression model representing class', 'construct table-structured data representations', 'model combinations reported', 'core language model', 'humans design models', 'data type abstraction', 'model clusters appropriately', 'positive pair models', 'cluster computing frameworks']),
        ReplacementConcept('colocate communication functions', 1, ['action activation functions', 'action activation function', 'error functions', 'acquisition function utilized widely', 'temporal acquisition function', 'kernel function selection', 'gradient privacy protection function', 'training loss functions', 'entropy search acquisition function', 'training set error function', 'support mapping objects', 'expected loss function errors', 'work utilizing non-linear function approximation', 'network evaluation function', 'existing acquisition functions', 'acquisition function', 'acquisition functions', 'fixed aggregation function offers', 'iterative function evaluations', 'fetch data function', 'remaining acquisition functions', 'function evaluations', 'error function erf', 'loss function error', 'cost function supports', 'training loss function', 'true acquisition function', 'called approximation error function', 'reward function evaluation grows linearly', 'presented potential function helps', 'loss function errors', 'constraint propagation function', 'objective function evaluation', 'approximation error function', 'objective function evaluation requires evaluating', 'support mapping similar', 'purely uncertainty-based acquisition functions', 'error indicator function', 'simple fetch data function', 'pursue function evaluations', 'objective function evaluations', 'error function', 'strongly-performing acquisition functions', 'privacy protection function', 'temporal acquisition functions', 'loss function ` assigning', 'loss function error sequence', 'tracked acquisition function', 'decision functions', 'classification loss function']),
        ReplacementConcept('software-as-a-service products today', 1, ['large tensor product spaces', 'bring quality products', 'drives machine learning today', 'fashion product recognition dataset8', 'today’s neural network architectures', 'today’s massive academic output', 'learning machines today', 'tensor product operation', 'product similarity function', 'product nodes identify factorizations', 'vector dot product', 'product review domains', 'dot product', 'dot products', 'test sets comprise products', 'code products external', 'gradient dot products', 'weighted element-wise dot product', 'product w>i wj close', 'product data', 'published specific data products', 'gradient dot product', 'multiple product lines', 'outer product operator', 'commercial product descriptions', 'production ready product', 'product management software developed', 'discrete product distributions', 'binary product distributions', 'vision paper today', 'product give similar results', 'product form', 'machine learning products', 'dot product operations', 'today’s neural networks', 'deep neural networks today', 'implementation handles products', 'tensor product position', 'standard deep learning packages today', 'today’s electricity markets', 'learn product automata', 'remain valid today', 'initial prefix tree acceptor product', 'minimum viable product', 'product model', 'symmetric outer product decomposition', 'dot product zᵀj', 'outer product factorization', 'matrix product states', 'cross product kernel']),
        ReplacementConcept('storage-based communication system', 1, ['wireless communication system', 'future multi-band optical communication systems', 'normal system activity', 'data discovery system', 'highly functional production system', 'real production systems', 'data discovery systems', 'decision support systems provided', 'proposed training system', 'system make error', 'machine learning systems design process', 'protection systems vary', 'marker-based motion capture system', 'motion capture system', 'system generates artificial faults', 'system protection software', 'system development process', 'online education systems', 'clinical decision support system', 'personalized search systems', 'clinical decision support systems', 'search engine system', 'makings network intrusion detection systems', 'decision support systems', 'financial search engine system', 'improve clinical decision support systems', 'communication graph structure', 'system enabling valuable interactions', 'system identification', 'develop classification systems', 'communication rounds required', 'malware classification system', 'economical power system operations', 'incremental classification systems', 'existing motion planning systems', 'system identification techniques', 'computer applications and/or systems design', 'decoupled classification systems', 'communication rounds', 'single communication round', 'power system operations', 'credit scoring system', 'nonlinear system identification', 'classification systems', 'system identification approach', 'linear system identification', 'recommender system tasks', 'reinforcement learning system', 'build interpretable reinforcement learning systems', 'protein classification system']),
        ReplacementConcept('great deal faster', 1, ['leading faster discovery', 'faster convergence rate', 'networks yielded faster convergence', 'show great promise', 'yielded faster training processes', 'recently achieved great successes', 'reporting faster training times', 'optimal behavior faster', 'achieve faster convergence', 'faster convergence', 'achieve faster training', 'shown great promise', 'shown great success', 'holding great promise', 'faster learning process', 'shown faster training', 'enables faster convergence', 'achieving great success', 'achieved great success', 'performance drops significantly faster', 'faster run time', 'demonstrated great performance', 'yield faster learning', 'great performance boost', 'shown great performance', 'achieve great improvements', 'sparked great insights', 'autonomous algorithm initially converges faster', 'great societal relevance', 'presents great opportunities', 'methods learn significantly faster', 'faster active learning loops', 'separate network enables faster learning', 'simple feedforward network faster', 'caused great difficulties', 'proposed method converges faster', 'track termination condition faster', 'estimator achieves great learning efficiency', 'js 177 times faster', 'lose great amounts', 'faster learning progress', 'encounter great challenges', 'made great strides', 'achieve great results', 'policy faster', 'great opportunities facing researchers', 'learning preferences faster', 'find high-quality solutions faster', 'results show great potential', 'complete dialogs faster']),
        ReplacementConcept('requires interprocess protection', 1, ['providing meaningful end-to-end protection', 'intellectual property protection', 'protection systems vary', 'computational effort needed', 'work effort needed', 'require additional features construction/engineering process', 'measurements require identification', 'stronger privacy protection', 'required training subsets', 'computational process needed', 'required training time', 'training process requires hundreds', 'lab measurements needed', 'approaches require excessive training time', 'learning process requires', 'total computation needed', 'communication rounds required', 'required classification label', 'machine learning applications require', 'requiring task labels', 'requires considerable communication', 'two-way communication channel needed', 'automated grid protection', 'requires exhaustive tuning', 'proposed criterion requires computation', 'non-trivial task requiring', 'methods require hyperparameter tuning', 'tasks typically require', 'communication bandwidth required', 'task requires answering', 'assessor attacks generally require', 'estimated actions required', 'lowest magnitude adversarial attack required', 'requires special care', 'requires lower computation time', 'require graph-wide calculations', 'total communication required', 'communication costs required', 'required intermediate computations', 'requires linear time computations', 'scientific applications require', 'inventory planning require richer information', 'requires high computation', 'average interaction time needed', 'interaction primitives required', 'human interactions required', 'requires km performance evaluations', 'requires special services', 'results requires careful examination', 'conscious domain requires conceptualization']),
        ReplacementConcept('managing heterogeneous hardware', 1, ['heterogeneous multi-agent systems', 'heterogeneous distributed systems', 'heterogeneous or/and multiple network architectures', 'heterogeneous network architectures', 'heterogeneous relational kernel learning', 'heterogeneous users interact', 'handles heterogeneous resource requests', 'heterogeneous modeling', 'heterogeneous disease effect modeling approach', 'heterogeneous treatment effect', 'heterogeneous disease effect', 'heterogeneous search space', 'heterogeneous edge servers', 'heterogeneous interaction network based', 'heterogeneous information network', 'heterogeneous networks', 'heterogeneous network resources', 'heterogeneous data modalities', 'heterogeneous big data', 'heterogeneous nature', 'heterogeneous time series data', 'model highly heterogeneous data', 'single heterogeneous network', 'heterogeneous data', 'heterogeneous undirected network', 'heterogeneous network model', 'turns heterogeneous medical records', 'heterogeneous domain adaptation', 'heterogeneous time series', 'heterogeneous switching behavior', 'heterogeneous multi-task metric learning', 'heterogeneous transfer learning', 'heterogeneous transfer learning approaches', 'estimating heterogeneous treatment effects', 'heterogeneous multitask learning', 'multiple heterogeneous domains', 'heterogeneous domains', 'heterogeneous active learning tasks', 'heterogeneous multi-task learning', 'heterogeneous tasks', 'incorporate heterogeneous models', 'heterogeneous features', 'heterogeneous network-based model', 'efficient hardware implementation', 'efficient hardware realization', 'specialized machine learning hardware', 'massively parallel hardware', 'state-of-the-art hardware technology', 'heterogeneous tasks/domains', 'building specialized machine learning hardware']),
        ReplacementConcept('require custom built tools', 1, ['predictive measurement tool', 'evaluating custom machine learning pipelines', 'static analysis tools', 'primary article management tool', 'developing technology tools', 'large deviation tools', 'custom learning rate decay', 'sophisticated test generation tool', 'subsequent learning tools', 'deep learning text categorization tool', 'deep learning tool', 'sophisticated data visualization tool', 'mixed-initiative design assistance tools', 'popular neuropsychological screening tool', 'automatic layout generation tool', 'modern deep learning tools', 'modern machine learning tools', 'modern deep learning tool', 'deep learning tools', 'automatic differentiation tools', 'automatic configuration tools', 'so-called automatic configuration tools', 'superior tool users', 'current frameworks implements tools', 'automatic extraction tool', 'custom task interpreter based', 'predictive modeling tool', 'open source tools', 'distributed ml jobs built', 'building human-like intelligent systems requires', 'custom proof-search methods working directly', 'building energy system', 'systems built', 'suitable machine learning tool', 'traditional fuzzing tool', 'machine learning based fuzzing tools', 'traditional fuzzing tools', 'computational tools', 'effective online learning tool', 'custom designed optimization algorithms', 'custom categorical variational autoencoder', 'highly capable tool', 'quickly evolving tools', 'cost-effective computational tools', 'promising generic tool', 'increasingly popular tool', 'modern containerization tools', 'machine learning tool', 'sktime includes tools', 'visual analytics tool']),
        ReplacementConcept('complex overlapping code bases', 1, ['code base', 'starter code base', 'author code base', 'shared knowledge base', 'base neural network layers shared', 'shared latent bases', 'complex data structure', 'complex wavelet signals', 'consecutive complex signal values', 'complex systems space', 'literature presenting complex', 'inherently complex symbolic objects', 'building complex network architectures', 'existing complex neural networks', 'complex maze-like structure', 'complex structure', 'complex cell layer repeatedly', 'complex road curvatures', 'model complex systems consisting', 'complex neural network architectures', 'complex sensor data', 'complex sensory inputs', 'possibly complex learning system', 'complex deep learning architectures', 'complex system', 'complex software-intensive systems', 'complex systems bring', 'complex hypothesis spaces', 'manipulating complex spaces', 'complex robotic systems', 'complex analytic subsets', 'complex projective space', 'complex systems', 'complex aggregation schemes', 'complex enterprise system', 'complex learning machines', 'complex machine learning models', 'complex machine learning', 'complex data sources', 'gain profile complex optimization problem', 'eventually learn complex programming idioms', 'large complex world', 'complex model architecture', 'complex numbers xi', 'overlapping group structure', 'capture complex relations', 'complex item hierarchy', 'complex architectures', 'implement increasing complex convex functions', 'exploring complex dependencies']),
        ReplacementConcept('serverless runtime system', 1, ['unknown time evolving system', 'biological natural systems', 'system identification', 'water storage system', 'nonequilibrium many-body system', 'real robotic systems', 'drone’s image recognition system', 'crossed wires represent multiple systems', 'targeted system', 'decision support systems provided', 'develop classification systems', 'submit system description papers', 'underlying system infrastructure', 'good concept representation learning system', 'nonequilibrium many-body systems', 'standard recommender system metrics', 'set system', 'power system', 'sensor systems', 'human auditory system', 'general type-2 fuzzy systems', 'quantum linear system algorithm', 'system dynamics equations', 'efficient machine learning systems design', 'machine learning systems considers', 'auditory system', 'actual intelligent maritime monitoring systems', 'system input', 'submitted online learning systems', 'malware classification system', 'test systems produce', 'computational model system', 'trustworthy machine learning systems', 'proposed training system', 'health system', 'traditional system', 'system transition', 'model complex systems consisting', 'operationalized scoring systems', 'visual system', 'automatic shape control system', 'expect broadly applicable intelligent systems', 'automated feedback system based', 'expert system administrators', 'chaotic systems', 'economical power system operations', 'heterogeneous multi-agent systems', 'conscious systems', 'popular recommendation systems datasets', 'concept algebra system'])
    ]

    print(ranker.genSubstitutions(text,concepts))



if __name__ == "__main__":
    import timeit

    print(timeit.Timer(lambda: main()).repeat(1, 1))